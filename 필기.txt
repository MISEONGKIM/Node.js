-------------------------------------nodejs
Node.js는 자바스크립트를 서버환경에서 실행하는 자바스크립트 런타임
node.js는 웹서버가 아님 node.js 자체로는 아무것도 하지 않음 -> 아파치는 html파일 경로지정, 서버 열고 php 실행, 세션이런 것 관리해줌 
node.js는 그냥 자바스크립트 런타임일 뿐 아파치와 같은 설정 없음 그대신 http서버 직접 구현해야됨 
%node.js 홈페이지 doc에서 모듈들 찾아서 사용할 모듈
var a = require('모듈'); 이렇게 받아서 사용

------------------------------------- npm
npm : Node Package Manager
타인의 모듈을 사용하는 방법 -> npm : node계의 앱스토어(설치,삭제,업그레이드,의존성 관리)
npm 독립적인 앱 설치 ->  npm install sample -g 
                        -g : 글로벌로 설치 이렇게 설치하면 터미널에서 직접 명령어로 실행 가능
                        uglifyjs프로그램: 필수코드 제외한 공백과 줄바꿈 같은 것을 제거함
                        uglifyjs 파일명.js -o 변환된파일명.min.js -m
                        -o : 저장 -m : 바뀌어도 되는 변수명(매개변수 같은) 한글자로 만듬.
                        변환된파일명.js에 min을 붙여서 파일이 최소화 되었다고 구분함(관습)

npm으로 모듈설치 -> npm install sample --save(이렇게 하려면 프로젝트 폴더를 npm 폴더로 초기화 시켜야댐 npm init)
                underscore.js(다른사람이 만든 모듈(패키지) 가져오는 것)

npm install -g npm -> 업그레이드 
그냥 install 하면 ./node_modules 디렉터리에 패키지 설치를 하고 끝. --save, --save-dev 옵션은 ./package.json 업데이트를 같이해준다.
npm repo morgan -> morgan에 관한 git 페이지 뜸 설명서?느낌

------------------------------------- 콜백함수
명령프롬포트에 node 파일명.js 안하고 node라고 하면 직접 자바스크립트 코드를 한 줄 한 줄 작성하여 실행시킬 수 있음
a = [3,1,2];
function b(v1, v2){ return  v2-v1}; //콜백함수
a.sort(b); //콜백함수는 누군가에게 호출 당하는 함수
console.log(a); -> 3,2,1

function b(v1, v2){ return  v1-v2}; //콜백함수
a.sort(b); 
console.log(a); -> 1,2,3

콜백 함수에 따라 sort의 기능이 다양하게 됨 이래서 콜백을 씀


------------------------------------- 동기/비동기
동기(Synchronous)
비동기(Asynchronous)

노드제이에스는 비동기 권유 / 동기를 위해 Sync 붙은 함수들 있음
노드js는 싱글스레드로 동작함


-------------------------------------Express 
node를 이용해서 만들어진 웹 프레임워크 
node는 http서버를 직접 구현해야하는 데 express는 웹서버에서 필요한 대부분의 기능 이미 구현된 웹 프레임워크임

------------------------------------- 라우터
get() 이런 메소드 라우터라고 함 -> 어떤 요청이 들어왔을 때 그 요청이 길을 찾을 수 있게 연결
사용자의 요청과 그 요청에 대한 처리하는 컨트롤러를 중개해주는 것이 라우터가 하는 역할이다.
app.method(path,handler)
method : http 요청 메소드 - get, post, delete, put ...
path : 라우트 경로
handler : 실행 될 콜백 함수

------------------------------------- 정적 / 동적 웹페이지 
정적인 웹페이지(localhost/파일명.html)는 실행 중에 html소스 변경하고 새로고침하면 바로 반영 , 요청이 들어올 때마다 노드가 잡아줌
그러나 동적 localhost/패스명(get()에 지정한 것)은 안됨  서버 다시시작해야됨 왜냐면 app.get()은 실행시키고 수정 후 서버를 끄고 다시해야됨. 동적인 것도 바로 반영되는 툴 있음 

------------------------------------- 미들웨어(middleware)
미들웨어함수는 요청 오브젝트(req), 응답 오브젝트(res), 그리고 애플리케이션의 요청-응답 주기 중 그 다음의 미들웨어 함수 대한 액세스 권한을 갖는 함수입니다.

        미들웨어 : 이를 통해 express자체에 있지 않은 기능 구현 가능, 다른 사람이 만든 미들웨어 사용 가능 
          |
http요청  ▽  라우트 작업
--------------------->
      Express
<--------------------
            http응답

미들웨어도 콜백 함수임 , 함수 만들어서 app.use()에 넣어주면됨 
requst가 들어왔을 때 다른 것 처리하기 전에 함수 실행되어 처리할 작업하고 
next(=콜백함수)를 실행하면 다른 미들웨어를 실행하거나 라우팅 작업실행 함
var myLogger = function (req,res,next) {
  console.log(req.url);
  next();
};
app.use(myLogger);

npm install --save morgan body-parser //이미 만들어진 미들웨어 설치
morgan : 로깅 미들웨어
body-parser: JSON 형태 데이터 파싱

------------------------------------- express 템플릿 엔진 Jade 
express자체는 템플릿 엔진 가지고 있지 않기 때문에 설치하고 express에 연결 
tab으로 태그 들여쓰기 됨  

html                         <html>      
  head                            <head></heda>
  body               -->>         <body> 
    h1 hello jade                    <h1>hello jade</h1>
                                  </body>
                             </html> 
for문 같은 화면에 출력되는 것이 아니면 앞에 -붙여야함 
ul
  -for(var i = 0; i < 5; i++) 
    li coding
div= time //time은 변수임 jade를 사용하는 express 쪽에서 변수값 주입
google에 jade template engine 검색하면 사용법 예시 있음 